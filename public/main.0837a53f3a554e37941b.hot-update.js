/*! For license information please see main.0837a53f3a554e37941b.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/index.js":(e,t,n)=>{n.r(t);var s=n("./node_modules/normalize-wheel/index.js"),a=n.n(s),i=n("./node_modules/lodash/each.js"),o=n.n(i),h=n("./app/components/Canvas/index.js"),d=(n("./app/classes/Detection.js"),n("./app/components/Navigation.js")),c=n("./app/components/Preloader.js"),p=n("./app/pages/About/index.js"),r=n("./app/pages/Collections/index.js"),u=n("./app/pages/Home/index.js"),l=n("./app/pages/Detail/index.js");new class{constructor(){this.createContent(),this.createCanvas(),this.createPreloader(),this.createNavigation(),this.createPages(),this.addEventListeners(),this.addLinkListeners(),this.onResize(),this.update()}createNavigation(){this.navigation=new d.default({template:this.template})}createPreloader(){this.preloader=new c.default({canvas:this.canvas}),this.preloader.once("completed",this.onPreloaded.bind(this))}createCanvas(){this.canvas=new h.default({template:this.template})}createContent(){this.content=document.querySelector(".content"),this.template=this.content.getAttribute("data-template")}createPages(){this.pages={about:new p.default,collections:new r.default,home:new u.default,detail:new l.default},this.page=this.pages[this.template],this.page.create()}onPreloaded(){this.onResize(),this.canvas.onPreloaded(),this.page.show()}onPopState(){this.onChange({url:window.location.pathname,push:!0})}async onChange({url:e,push:t=!0}){if("https://www.marcossanchez.dev/"==e||e.includes("/about")){this.canvas.onChangeStart(this.template,e),await this.page.hide();const n=await window.fetch(e);if(200===n.status){const s=await n.text(),a=document.createElement("div");t&&window.history.pushState({},"",e),a.innerHTML=s;const i=a.querySelector(".content");this.template=i.getAttribute("data-template"),this.navigation.onChange(this.template),this.content.setAttribute("data-template",this.template),this.content.innerHTML=i.innerHTML,this.canvas.onChangeEnd(this.template),this.page=this.pages[this.template],this.page.create(),this.onResize(),this.page.show(),this.addLinkListeners()}else console.error(`response status: ${n.status}`)}else window.open(`${e}`,"_blank")}onResize(){this.page&&this.page.onResize&&this.page.onResize(),window.requestAnimationFrame((e=>{this.canvas&&this.canvas.onResize&&this.canvas.onResize()}))}onTouchDown(e){this.canvas&&this.canvas.onTouchDown&&this.canvas.onTouchDown(e),this.page&&this.page.onTouchDown&&this.page.onTouchDown(e)}onTouchMove(e){this.canvas&&this.canvas.onTouchMove&&this.canvas.onTouchMove(e),this.page&&this.page.onTouchMove&&this.page.onTouchMove(e)}onTouchUp(e){this.canvas&&this.canvas.onTouchUp&&this.canvas.onTouchUp(e),this.page&&this.page.onTouchUp&&this.page.onTouchUp(e)}onWheel(e){const t=a()(e);this.canvas&&this.canvas.onWheel&&this.canvas.onWheel(t),this.page&&this.page.onWheel&&this.page.onWheel(t)}update(){this.page&&this.page.update&&this.page.update(),this.canvas&&this.canvas.update&&this.canvas.update(this.page.scroll),this.frame=window.requestAnimationFrame(this.update.bind(this))}addEventListeners(){window.addEventListener("wheel",this.onWheel.bind(this)),window.addEventListener("mousedown",this.onTouchDown.bind(this)),window.addEventListener("mousemove",this.onTouchMove.bind(this)),window.addEventListener("mouseup",this.onTouchUp.bind(this)),window.addEventListener("touchstart",this.onTouchDown.bind(this)),window.addEventListener("touchmove",this.onTouchMove.bind(this)),window.addEventListener("touchend",this.onTouchUp.bind(this)),window.addEventListener("pointerdown",this.onTouchDown.bind(this)),window.addEventListener("pointermove",this.onTouchMove.bind(this)),window.addEventListener("pointerup",this.onTouchUp.bind(this)),window.addEventListener("resize",this.onResize.bind(this))}addLinkListeners(){const e=document.querySelectorAll("a");o()(e,(e=>{e.onclick=t=>{t.preventDefault();const{href:n}=e;this.onChange({url:n})}}))}}}},(function(e){e.h=()=>"2ce2fcd22e5249dce563"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,